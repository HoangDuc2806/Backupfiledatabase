import os
import shutil
import smtplib
from email.mime.text import MIMEText
from dotenv import load_dotenv
import schedule
import time
from datetime import datetime

# T·∫£i c√°c bi·∫øn m√¥i tr∆∞·ªùng t·ª´ t·ªáp .env
load_dotenv()
email_gui = os.getenv('EMAIL_SENDER')
mat_khau_gui = os.getenv('EMAIL_PASSWORD')
email_nhan = os.getenv('EMAIL_RECEIVER')

thu_muc_csdld = './database'
thu_muc_sao_luu = './backup'

# H√†m g·ª≠i email th√¥ng b√°o
def gui_email(tieu_de, noi_dung):
    thong_diep = MIMEText(noi_dung)
    thong_diep['From'] = email_gui
    thong_diep['To'] = email_nhan
    thong_diep['Subject'] = tieu_de
    try:
        with smtplib.SMTP('smtp.gmail.com', 587) as server:
            server.starttls()
            server.login(email_gui, mat_khau_gui)
            server.send_message(thong_diep)
        print("‚úÖ ƒê√£ g·ª≠i email th√†nh c√¥ng.")
    except Exception as loi:
        print(f"‚ùå G·ª≠i email th·∫•t b·∫°i: {loi}")

# H√†m sao l∆∞u c∆° s·ªü d·ªØ li·ªáu
def sao_luu_csdld():
    try:
        os.makedirs(thu_muc_sao_luu, exist_ok=True)
        danh_sach_file_sao_luu = []

        for tep in os.listdir(thu_muc_csdld):
            if tep.endswith(('.sql', '.sqlite3')):
                duong_dan_goc = os.path.join(thu_muc_csdld, tep)
                thoi_gian = datetime.now().strftime('%Y%m%d_%H%M%S')
                duong_dan_dich = os.path.join(thu_muc_sao_luu, f"{os.path.splitext(tep)[0]}_{thoi_gian}{os.path.splitext(tep)[1]}")
                shutil.copy2(duong_dan_goc, duong_dan_dich)
                danh_sach_file_sao_luu.append(duong_dan_dich)

        if danh_sach_file_sao_luu:
            gui_email("‚úÖ Sao l∆∞u th√†nh c√¥ng", "C√°c t·ªáp ƒë√£ sao l∆∞u:\n" + "\n".join(danh_sach_file_sao_luu))
        else:
            gui_email("‚ö†Ô∏è Kh√¥ng c√≥ t·ªáp ƒë·ªÉ sao l∆∞u", "Kh√¥ng t√¨m th·∫•y t·ªáp .sql ho·∫∑c .sqlite3 trong th∆∞ m·ª•c database.")
    except Exception as loi:
        gui_email("‚ùå Sao l∆∞u th·∫•t b·∫°i", f"L·ªói chi ti·∫øt: {str(loi)}")

# L√™n l·ªãch sao l∆∞u h√†ng ng√†y v√†o 00:00
schedule.every().day.at("00:00").do(sao_luu_csdld)

print("üïõ ƒêang ch·∫°y l·ªãch sao l∆∞u t·ª± ƒë·ªông...")

while True:
    schedule.run_pending()
    time.sleep(1)  # Th√™m sleep nh·∫π ƒë·ªÉ tr√°nh CPU load cao
